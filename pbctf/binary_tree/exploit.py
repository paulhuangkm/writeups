from pwn import *
from result import adds, childs, depths
from bitarray import bitarray


print(len(adds))
print(len(childs))
print(len(depths))
print(max(depths))
inv_depths = [[] for _ in range(801)]
for i in range(25503):
    inv_depths[depths[i]].append(i)
bits_arr = ["" for _ in range(25503)]
dist = [9000000 for _ in range(25503)]
dist[0] = 0
for i in range(800):
    print("depth:", i)
    for j in inv_depths[i]:
        left_c, right_c = childs[j][0], childs[j][1]
        if dist[left_c] > (dist[j] + adds[j][0]):
            dist[left_c] = dist[j] + adds[j][0]
            bits_arr[left_c] = bits_arr[j] + "1"
        if dist[right_c] > (dist[j] + adds[j][1]):
            dist[right_c] = dist[j] + adds[j][1]
            bits_arr[right_c] = bits_arr[j] + "0"

for i in inv_depths[800]:
    if dist[i] <= 18906:
        bits = bits_arr[i]
        flag = bitarray((bits[:8])[::-1]).tobytes()
        flag += b"".join([bitarray(bits[j+7:j-1:-1]).tobytes() for j in range(0, 800, 8)])
        print(flag)